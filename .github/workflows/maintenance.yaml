name: Maintenance
#
# Requires 'BOT_TOKEN' as Dependabot secret too to push signed commits
#

on:
  workflow_dispatch:
    inputs:
      job:
        description: Job to run
        type: choice
        options:
          - Create Required Labels
          - Pin Actions and Docker images
        required: false
        default: Pin Actions and Docker images
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  pin_actions_and_docker_images:
    name: Pin Actions and Docker images
    runs-on: ubuntu-latest
    timeout-minutes: 1
    if: |
      github.event.inputs.job == 'Pin Actions and Docker images' ||
      github.event_name == 'push'
    permissions:
      id-token: write
    steps:
      - name: Harden the runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: block
          allowed-endpoints: >
            ${{ vars.ALLOWED_ENDPOINTS }}
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          token: ${{ secrets.BOT_TOKEN }}
          ref: ${{ github.head_ref || github.ref_name }}
      - name: Check for workflow file changes
        id: filter
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # ratchet:dorny/paths-filter@v3.0.2
        with:
          filters: |
            workflows:
              - '.github/workflows/**'
      - name: Set up Go
        if: steps.filter.outputs.workflows == 'true'
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # ratchet:actions/setup-go@v5
        with:
          go-version: 1.23
      - name: Install Ratchet
        if: steps.filter.outputs.workflows == 'true'
        run: GOSUMDB=off GOPROXY=direct go install github.com/sethvargo/ratchet@ee93c849418d0b9316703bb349055a4078ad205e # ratchet:v0.10.2
      - name: Pin
        if: steps.filter.outputs.workflows == 'true'
        run: ratchet pin $(ls .github/workflows/*.{yaml,yml} 2>/dev/null)
      - name: Push changes
        if: steps.filter.outputs.workflows == 'true'
        env:
          COMMIT_MESSAGE: "ci: pin actions and Docker images in workflows [skip ci]"
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            gpg --import <(echo "${{ secrets.BOT_GPG_PRIVATE_KEY_BASE64 }}" | base64 -d)
            git config user.name "gha-bot"
            git config user.email "gha-bot.noreply.wdx1x@tenet.pm"
            git config user.signingkey "ABD02F54EDDADCB6"
            git config commit.gpgsign true
            git status --porcelain
            git commit -am "$COMMIT_MESSAGE"
            git push
          else
            echo "No changes to commit."
          fi

  create_labels:
    name: Create Required Labels
    runs-on: ubuntu-latest
    timeout-minutes: 1
    if: github.event.inputs.job == 'Create Required Labels'
    permissions:
      issues: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
      - name: Create labels
        uses: ./.github/actions/create-labels
        with:
          labels: |
            [
              {"name": "actions", "color": "eadd01", "description": "Github Action version update"},
              {"name": "dependencies", "color": "999999", "description": "Software dependency version update"},
            ]

  dependabot_automerger:
    name: Dependabot Automerger
    runs-on: ubuntu-latest
    timeout-minutes: 1
    if: github.event_name == 'pull_request' && github.event.pull_request.user.login == 'dependabot[bot]'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@08eff52bf64351f401fb50d4972fa95b9f2c2d1b # ratchet:dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Update branch and enable auto-merge
        if: contains('automerged-security,automerged-versions', steps.dependabot-metadata.outputs.dependency-group)
        run: |
          if gh pr view "${PR_URL}" --json mergeStateStatus | grep -q "BEHIND"; then
            echo "Branch is behind base branch, updating..."
            gh pr update "${PR_URL}" --update-branch
            sleep 10
          fi
          gh pr merge --auto --squash "${PR_URL}"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}

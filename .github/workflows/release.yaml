name: Release
run-name: ${{ github.event_name == 'pull_request' && 'Test' || github.event_name == 'release' && 'Release' || 'Prepare Release' }}

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - '!**'
      - '.github/release-please-config.json'
      - '.github/release-please-manifest.json'
      - 'hooks/**'
  pull_request:
    branches: [main]
    paths:
      - '!**'
      - '.github/release-please-config.json'
      - '.github/release-please-manifest.json'
      - 'hooks/**'
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 1
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && !startsWith(github.head_ref, 'release-please'))
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # ratchet:dorny/paths-filter@v3.0.2
        id: filter
        with:
          list-files: json
          filters: |
            has_shell_changes:
              - 'hooks/shell/**'
      - name: Run ShellCheck
        if: steps.filter.outputs.has_shell_changes == 'true'
        uses: ludeeus/action-shellcheck@00cae500b08a931fb5698e11e79bfbd38e612a38 # ratchet:ludeeus/action-shellcheck@2.0.0
        with:
          scandir: hooks/shell
          severity: error
          #env:
          #  SHELLCHECK_OPTS: -e SC2059 -e SC2034 -e SC1090
      # https://github.com/googleapis/release-please-action?tab=readme-ov-file#action-inputs
      - uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # ratchet:googleapis/release-please-action@v4
        if: github.actor != 'dependabot[bot]' && github.event_name == 'push'
        with:
          config-file: .github/release-please-config.json
          manifest-file: .github/release-please-manifest.json
          token: ${{ secrets.BOT_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 1
    if: github.event_name == 'release'
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          token: ${{ secrets.BOT_TOKEN }}
          ref: ${{ github.event.release.tag_name }}
      - name: Configure Git
        run: |
          gpg --import <(echo "${{ secrets.BOT_GPG_PRIVATE_KEY_BASE64 }}" | base64 -d)
          git config user.name "gha-bot"
          git config user.email "gha-bot.noreply.wdx1x@tenet.pm"
          git config user.signingkey "ABD02F54EDDADCB6"
          git config commit.gpgsign true
      - name: Extract major and minor versions
        run: |
          TAG_NAME="${{ github.event.release.tag_name }}"
          MAJOR=$(echo "$TAG_NAME" | cut -d. -f1)
          MINOR=$(echo "$TAG_NAME" | cut -d. -f2)
          echo "MAJOR=$MAJOR" >> $GITHUB_ENV
          echo "MINOR=$MINOR" >> $GITHUB_ENV
      - name: Create major and minor version tags
        run: |
          # Create or update major version tag
          git tag -d $MAJOR || true
          git push origin :$MAJOR || true
          git tag -s -a $MAJOR -m "Release $MAJOR"

          # Create or update minor version tag
          git tag -d $MAJOR.$MINOR || true
          git push origin :$MAJOR.$MINOR || true
          git tag -s -a $MAJOR.$MINOR -m "Release $MAJOR.$MINOR"

          # Push tags
          git push origin $MAJOR $MAJOR.$MINOR
